name: Test

on:
  workflow_dispatch:

  push:
    branches: [main, dev]

  pull_request_target:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Testing

    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - python: pypy3.8
            os: ubuntu-latest
          - python: pypy3.9
            os: ubuntu-latest
      fail-fast: true
      max-parallel: 3

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-python@v4.2.0
        with:
          python-version: ${{ matrix.python }}

      - name: Install poetry
        run: |
          pip install poetry

      - name: Get poetry cache directory
        id: cache-poetry
        run: |
          echo "::set-output name=dir::$(poetry config cache-dir)"

      - uses: actions/cache@v3.0.6
        with:
          path: |
            ${{ steps.cache-poetry.outputs.dir }}
            ./.venv
          key: ${{ runner.os }}-poetry-${{ matrix.python }}-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        timeout-minutes: 5
        run: |
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.path .venv
          poetry install -vvv

      - name: Testing with pytest
        timeout-minutes: 15
        run: |
          curl -L ${{ secrets.DOTENV_LINK }} > .env
          poetry run pytest --cov ./hibiapi/ --cov-report xml --cov-report term-missing ./test

      - uses: codecov/codecov-action@v3
        with:
          env_vars: OS,PYTHON
          file: coverage.xml
